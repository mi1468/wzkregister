{"version":3,"sources":["../../src/pages/calendar.module/event-modal/event-modal.module.ts","../../src/pages/calendar.module/event-modal/event-modal.ts"],"names":[],"mappings":"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","file":"34.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { EventModalPage } from './event-modal';\n\n\n@NgModule({\n  declarations: [\n    EventModalPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(EventModalPage)\n  ],\n})\nexport class EventModalPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/calendar.module/event-modal/event-modal.module.ts","import { Component } from '@angular/core';\nimport {AlertController, IonicPage, NavController, NavParams, ViewController} from 'ionic-angular';\nimport * as moment from 'moment';\nimport {CalendarEvent} from \"../../../providers/calendar/calendarEvent.Model\";\nimport {AuthManagerProvider} from \"../../../providers/auth-manager/auth-manager\";\nimport {CalendarProvider} from \"../../../providers/calendar/calendarProvider\";\n\n@IonicPage()\n@Component({\n  selector: 'page-event-modal',\n  templateUrl: 'event-modal.html',\n})\nexport class EventModalPage {\n\n  titlePlaceholderText = \"Titel\"; // Title\n  eventLocationPlaceholderText = \"Veranstaltungsort\"; // Event location\n  notesPlaceholderText = \"Notizen\"; // Notes\n  startDatePlaceholderText = \"Start\"; // Start\n  endDatePlaceholderText = \"Ende\"; // End\n  typeOfEventPlaceholderText = \"Art der Veranstaltung\"; // Type of event\n  patientsInvitedPlaceholderText = \"Eingeladene Patienten\"; // Patients invited\n  allDayPlaceholderText = \"Den ganzen Tag?\"; // All Day?\n  addEventPlaceholderText = \"Event hinzuf√ºgen\"; // Add Event\n  eventDetailsPlaceholderText = \"Veranstaltungsdetails\"; // Event Details\n\n  currentTime = moment().toDate();\n  event: CalendarEvent = new CalendarEvent();\n  startTime = moment(this.currentTime).format();\n  endTime= moment(EventModalPage.createDateAddingHours(this.currentTime,1)).format();\n  minDate = moment(this.currentTime).format();\n  eventTypeInText: string = CalendarEvent.getEventTypeByNumber(this.event.typeOfMeeting);\n  isMedical = this.authManager.isMedical;\n  hasShowedMessageForUpdatingPatientsList = false;\n\n  public static createDateAddingHours(date:Date, hours:number): Date {\n    let temp:Date = new Date();\n    temp.setTime(date.getTime() + (hours*60*60*1000));\n    return temp;\n  }\n\n  constructor(public navCtrl: NavController, private navParams: NavParams, public viewCtrl: ViewController, public alertController: AlertController, public authManager: AuthManagerProvider, private calendarProvider : CalendarProvider) {\n    let selectedDayDate = moment(this.navParams.get('selectedDay')).toDate();\n    if(this.currentTime.getDay()!=selectedDayDate.getDay() || this.currentTime.getMonth()!=selectedDayDate.getMonth() || this.currentTime.getFullYear()!=selectedDayDate.getFullYear()) {\n      let preselectedDate = moment(this.navParams.get('selectedDay')).format();\n      let preselectedDateEnd = moment(EventModalPage.createDateAddingHours(this.navParams.get('selectedDay'),1)).format();\n      this.startTime = preselectedDate;\n      this.endTime = preselectedDateEnd;\n    }\n  }\n\n  cancel() {\n    this.viewCtrl.dismiss();\n  }\n\n  save() {\n    this.event.startTime = moment(this.startTime).toDate();\n    this.event.endTime = moment(this.endTime).toDate();\n    this.viewCtrl.dismiss(this.event);\n  }\n\n  ionViewDidLoad() {}\n\n  private parsePatientsList(array) {\n      let result = [];\n      for (let user of array) {\n          if (user.hasOwnProperty(\"id\")) {\n              result.push(user[\"id\"]);\n          }\n      }\n      return result;\n  }\n\n  private isIncluded(item, array) {\n      if(array) {\n          for(let obj of array){\n              if (obj==item)\n                  return true;\n          }\n      }\n      return false;\n  }\n\n  public promptToSelectPatients() {\n      console.log(\"Inside the select patients function.\");\n      if (this.calendarProvider.usersListFinishedUpdate==true && (!this.calendarProvider.usersListUpdating==true)) {\n          console.log(\"Inside the if!!! of the select patients function.\");\n          let emails = this.parsePatientsList(this.calendarProvider.usersList);\n          let alert = this.alertController.create({\n              title: \"Patienten f√ºr den Termin\" // \"Patients for the appointment\"\n          });\n          let selectedPatients = [];\n          if(this.event.participants!=\"\") {\n              selectedPatients = this.event.participants.split(\",\");\n          }\n          for(let patientEmail of emails) {\n              alert.addInput({\n                  type: 'checkbox',\n                  label: patientEmail,\n                  value: patientEmail,\n                  checked: this.isIncluded(patientEmail,selectedPatients)\n              });\n          }\n          alert.addButton('Cancel');\n          alert.addButton({\n              text: 'OK',\n              handler: data => {\n                  let participants = \"\";\n                  for(let email of data) {\n                      participants += email + \",\";\n                  }\n                  participants = participants.substring(0,participants.length-1);\n                  console.log(\"Participants: \", participants);\n                  this.event.participants = participants;\n              }\n          });\n          alert.present();\n      }\n      else {\n          console.log(\"Inside the else :((( !!! of the select patients function.\");\n          if (this.calendarProvider.usersListUpdating==false && this.calendarProvider.usersListFinishedUpdate == false) {\n              console.log(\"Starting updating the list?\");\n              this.calendarProvider.updateUserList();\n          }\n          let alert = this.alertController.create({\n              title: \"Patientenliste abrufen\", //\"Retrieving patients' list\"\n              subTitle: \"Bitte warten Sie. Die Anwendung ruft die Patientenliste ab und es erscheint ein neues Fenster zur Auswahl der Patienten.\" //\"Please wait. The application retrieves the patients' list and a new window will appear to select patients.\"\n          });\n          alert.addButton({\n              text: 'OK'\n          });\n          if (this.hasShowedMessageForUpdatingPatientsList==false) {\n              alert.present();\n              this.hasShowedMessageForUpdatingPatientsList = true;\n          }\n          setTimeout( () => {\n              this.promptToSelectPatients();\n              }, 1500);\n      }\n  }\n\n  public promptToSelectTypeOfEvent() {\n    let alert = this.alertController.create({\n        title: \"Art der Veranstaltung\" // \"Type of event\"\n    });\n    for(let eventType of CalendarEvent.ALL_EVENT_TYPES) {\n      alert.addInput({\n          type: 'radio',\n          label: CalendarEvent.getEventTypeByNumber(eventType),\n          value: String(eventType),\n          checked: this.event.typeOfMeeting == eventType\n      });\n    }\n    alert.addButton('Abbrechen'); // Cancel\n    alert.addButton({\n      text: 'OK',\n      handler: data => {\n        console.log(this.event);\n        console.log(data);\n        this.event.typeOfMeeting = Number(data);\n        this.eventTypeInText = CalendarEvent.getEventTypeByNumber(this.event.typeOfMeeting);\n        console.log(this.event);\n      }\n    });\n    alert.present();\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/calendar.module/event-modal/event-modal.ts"],"sourceRoot":""}