{"version":3,"sources":["../../src/pages/file-upload/file-upload.module.ts","../../src/pages/file-upload/file-upload.ts"],"names":[],"mappings":"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","file":"27.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { FileUploadPage } from './file-upload';\n\n@NgModule({\n  declarations: [\n    FileUploadPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(FileUploadPage),\n  ],\n})\nexport class FileUploadPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/file-upload/file-upload.module.ts","import { Component } from '@angular/core';\nimport {AlertController, IonicPage, NavController, NavParams, Platform} from 'ionic-angular';\nimport {FileChooser} from \"@ionic-native/file-chooser\";\nimport {IOSFilePicker} from \"@ionic-native/file-picker\";\nimport {ApiProvider} from \"../../providers/api/api\";\nimport {File} from \"@ionic-native/file\";\nimport {AuthManagerProvider} from \"../../providers/auth-manager/auth-manager\";\nimport {OtpProvider} from \"../../providers/otp/otp\";\nimport {FilePath} from \"@ionic-native/file-path\";\n\n/**\n * Generated class for the FileUploadPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-file-upload',\n  templateUrl: 'file-upload.html',\n})\nexport class FileUploadPage {\n\n    uploading = false;\n    uploadingMessage = \"Uploading file...\";\n\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private fileChooserAndroid: FileChooser, private platform: Platform, private filePickerIOS: IOSFilePicker, private api: ApiProvider, private file: File, private authManager: AuthManagerProvider, private otp: OtpProvider, private filePath: FilePath, private alertCtrl: AlertController) {\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad FileUploadPage');\n  }\n\n  showMessage(title: string, message: string, callback = (data) => { console.log(\"On the message with title \" + title + \" and messsage '\" + message + \"'\", data)} ) {\n\n      let alert = this.alertCtrl.create({\n          title: title,\n          subTitle: message.replace(\"\\n\",\"<br>\"),\n          buttons: [\n              {\n                  text: 'OK',\n                  handler: data => {\n                      callback(data)\n                  }\n              }\n          ]\n      });\n      alert.present();\n  }\n\n  /**\n   * Prompt user to select file using the mobile OS file chooser/picker.\n   */\n  selectFile() {\n        if (this.platform.is('android')) {\n            this.fileChooserAndroid.open().then( uri => {\n                console.log(\"File picked for the upload: \", uri)\n                this.filePath.resolveNativePath(uri).then( filepath => {\n\n                    console.log(\"File picked for the upload with resolved path: \", filepath);\n                    this.uploadFile(filepath, (success, data) => { this.afterUploadFile(success, data);})\n                }).catch( exc => {\n                    console.log(\"Exception when resolving URI to File path: \", exc)\n                })\n            }).catch( exc => {\n                console.log(exc)\n            })\n        }\n        if (this.platform.is('ios')) {\n            this.filePickerIOS.pickFile().then( uri => {\n                console.log(\"File picked for the upload: \", uri);\n                this.uploadFile(uri, (success, data) => { this.afterUploadFile(success, data);})\n            }).catch( exc => {\n                console.log(exc)\n            })\n        }\n  }\n\n\n  /**\n   * Processes the response of the upload request\n   * @param success\n   * @param data\n   */\n  afterUploadFile(success, data) {\n      this.uploading = false;\n      if(success) {\n          let bodyResponse = JSON.parse(data[\"_body\"]);\n          let successfullyTransferred = bodyResponse[\"success\"];\n          let dataResponse = bodyResponse[\"data\"];\n          if (successfullyTransferred) {\n              console.log(\"The transfer of the data to the server was successful and encrypted and everything!\");\n              console.log(\"The response was: \", dataResponse);\n              this.showMessage(\"Hochgeladene Datei erfolgreich\", \"Der Upload der Datei war erfolgreich.\"); // \"Uploaded file successfully\", \"The upload of the file was successful.\"\n          }\n          else {\n              this.showMessage(\"Fehler beim Hochladen der Datei\", \"Es gab ein Problem beim Hochladen der Datei: \" + dataResponse); // \"Upload file error\", \"There was an issue while uploading the file: \"\n              console.log(\"There was a problem with the server.\");\n              console.log(dataResponse);\n          }\n      }\n      else {\n          console.log(\"The server was most likely un-responsive. Please see details: \", success, data);\n          this.showMessage(\"Fehler beim Hochladen der Datei\", \"Der Server war höchstwahrscheinlich nicht erreichbar. Siehe Details: \" + data); // \"Upload file error\", \"The server was most likely un-responsive. Please see details: \"\n      }\n  }\n\n  /**\n   * Uploads a file to the server on a hardcoded folder\n   * @param unencryptedFilepathURI The file path of the file to upload\n   * @param callback The function that will be called after the request is completed.\n   */\n    uploadFile(unencryptedFilepathURI, callback) {\n\n\n        let apiPath = \"/upload\";\n        let keyPath = this.file.dataDirectory.substr(7) + \"/key.otp\";\n\n        let fileHash = \"asf\"; //TODO\n        let userFolderToUploadTo = \"a.pantavos@gmail.com\"; // TODO\n        let unencryptedFilename = unencryptedFilepathURI.substr(unencryptedFilepathURI.lastIndexOf(\"/\")+1);\n\n\n        let encryptedFileFolder = this.file.externalDataDirectory;\n        let encryptedFilename = unencryptedFilename + \".crypt\";\n        let encryptedFilepath = encryptedFileFolder + \"/\" + encryptedFilename;\n\n\n\n\n        const removeEncryptedFile =() => {\n            this.file.removeFile(encryptedFileFolder,encryptedFilename).then(succ => {\n                console.log(\"Tried to remove the temporary encrypted data file: \", succ);\n            }, rej => {\n                console.log(\"Tried to remove the temporary encrypted data file: \", rej);\n            }).catch(exc => {\n                console.log(\"Tried to remove the temporary encrypted data file: \", exc);\n            })\n        };\n\n        this.alertCtrl.create();\n\n\n        const encryptNUploadFile = () => {\n            this.otp.encrypt(keyPath, unencryptedFilepathURI.substr(7), encryptedFilepath.substr(7), success => {\n                console.log(\"Encryption success \", success);\n\n                this.file.checkFile(encryptedFileFolder, encryptedFilename).then(success => {\n                    console.log(\"Encryptd file exists:\", success);\n\n                    this.uploadingMessage = \"Uploading file\";\n                    this.file.readAsDataURL(unencryptedFilepathURI.substring(0, unencryptedFilepathURI.lastIndexOf(\"/\")), unencryptedFilename).then( fileData => {\n\n                        /*let hashTestRaw = Md5.hashStr(fileData,true);\n                        console.log(\"MD5 hash test raw of the file: \", hashTestRaw);\n                        let hashTestNotRaw = Md5.hashStr(fileData,false);\n                        console.log(\"MD5 hash test No raw of the file: \", hashTestNotRaw);\n                        let hasher = new ParallelHasher('ts-md5/dist/md5_worker.js');*/\n                        //fileHash = hasher.hash(fileData);\n                        console.log(\"MD5 hash of the file: \", fileHash);\n\n                        let fileInfo = btoa(encodeURIComponent(JSON.stringify({'userFolder': userFolderToUploadTo, 'filename' : unencryptedFilename, 'hash' : fileHash})));\n\n                        this.file.readAsDataURL(encryptedFileFolder, encryptedFilename).then(encryptedData=> {\n                            console.log(\"We are reading encrypted data: \", encryptedData);\n                            if (encryptedData) {\n                                let encodedData = encryptedData.substring(encryptedData.indexOf(\"base64,\") + 7);\n                                this.api.post(apiPath, {\n                                    key: this.authManager.key,\n                                    data: encodedData,\n                                    fileinfo: fileInfo\n                                }, [], (success, data) => {\n                                    callback(success, data);\n                                    removeEncryptedFile();\n                                })\n                            } else {\n                                console.log(\"Could not read the encrypted file (temp.crypt) that was created to send the data to the server.\")\n                                this.uploading = false;\n                            }\n                        }, rej => {\n                            this.showMessage(\"Fehler beim Hochladen der Datei\", \"Die Anwendung konnte die verschlüsselte Datei nicht öffnen: \" + rej.toString()); // \"Upload file error\", \"Application could not open the encrypted file: \"\n                            console.log(\"Rejection while reading the encrypted data file..\", rej, encryptedFileFolder, encryptedFilename);\n                            console.log(\"Rejection while reading the encrypted data file.. Folder: \", encryptedFileFolder);\n                            console.log(\"Rejection while reading the encrypted data file.. File: \", encryptedFilename);\n                            this.uploading = false;\n                        }).catch(exc => {\n                            this.showMessage(\"Fehler beim Hochladen der Datei\", \"Die Anwendung konnte die verschlüsselte Datei nicht öffnen: \" + exc.toString()); // \"Application could not open the encrypted file: \"\n                            console.log(\"Exception while reading the encrypted data file.. \", exc);\n                            this.uploading = false;\n                        });\n                    }).catch( exc => {\n                        console.log(\"Exception while reading the file to create the hash: \", exc);\n                        this.showMessage(\"Fehler beim Hochladen der Datei\", \"Die Anwendung konnte den Hash der Datei nicht erzeugen: \" + exc.toString()); // \"Application could not create the hash of the file: \"\n                        this.uploading = false;\n                    });\n\n                }).catch( exc => {\n                    console.log(\"Ecrypted file doesn't exist: \", exc);\n                    this.showMessage(\"Fehler beim Hochladen der Datei\", \"Die Anwendung konnte die Datei nicht verschlüsseln.\"); // \"Application could not encrypt the file.\"\n                    this.uploading = false;\n                });\n\n            }, fail => {\n                this.showMessage(\"Fehler beim Hochladen der Datei\", \"Die Anwendung konnte die Verschlüsselung der Datei nicht beenden, daher wurde sie nicht hochgeladen.\"); // \"Application could not finish the encryption of the file, thus it was not uploaded.\"\n                console.log(\"Failed to encrypt\", fail)\n                this.uploading = false;\n            });\n\n        };\n\n        let alert = this.alertCtrl.create();\n        //const alertTitleMessage = \"Do you want to upload \" + unencryptedFilename + \" to the server under the folder of \" + userFolderToUploadTo + \" ?\";\n        const alertTitleMessage = \"Möchten Sie Ihre Daten hochladen \" + unencryptedFilename + \" auf den Server unter dem Ordner von \" + userFolderToUploadTo + \" ?\";\n        alert.setTitle(alertTitleMessage);\n        alert.addButton('Abbrechen');\n        alert.addButton({\n            text: 'Hochladen', // Upload\n            handler: data => {\n                this.uploading = true;\n                this.uploadingMessage = \"Datei verschlüsseln\"; // \"Encrypting file\"\n                setTimeout( () => { encryptNUploadFile(); } , 500);\n            }\n        });\n        alert.present();\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/file-upload/file-upload.ts"],"sourceRoot":""}