{"version":3,"sources":["../../src/pages/food-card/food-card.module.ts","../../src/pages/food-card/food-card.ts"],"names":[],"mappings":"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","file":"26.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { FoodCardPage } from './food-card';\n\n@NgModule({\n  declarations: [\n    FoodCardPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(FoodCardPage),\n  ],\n})\nexport class FoodCardPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/food-card/food-card.module.ts","import {Component, ViewChild} from '@angular/core';\nimport {AlertController, IonicPage, ModalController, NavController, NavParams, Slides} from 'ionic-angular';\nimport {ModalContentPage} from \"./modal-box.page\";\nimport {Http} from \"@angular/http\";\nimport {HomePage} from \"../home/home\";\nimport {LinkManagerProvider} from \"../../providers/link-manager/link-manager\";\nimport {AuthManagerProvider} from \"../../providers/auth-manager/auth-manager\";\n\n/**\n * Generated class for the FoodCardPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-food-card',\n  templateUrl: 'food-card.html',\n})\nexport class FoodCardPage {\n\n  locationOptions: any;\n\n  /**\n   * No need to change this([clinicLocations]) anymore as this is the list of the clinics that appear when the user isn't logged in.\n   * But the Food module view isn't appearing anymore when the user isn't logged in.\n   */\n  clinicLocations = [\n    {\n      name: \"Bad Saulgau\",\n      developername: \"saulgau\"\n    },\n    {\n      name: \"Bad Waldsee\",\n      developername: \"waldsee\"\n    }\n  ];\n\n\n  loaded = false;\n  public items: any[];\n  testRadioOpen: boolean;\n  testRadioResult;\n\n\n  foodNotes = \"\";\n\n  date = new Date();\n\n  today = this.date.getFullYear() + (\"0\" + (this.date.getMonth() + 1)).slice(-2) + (\"0\" + this.date.getDate()).slice(-2)\n  food: any[] = [];\n  menu: any;\n  card: any = [];\n  days: any = [];\n  //  data: any;\n  day: any = [];\n  nid: any;\n  test = \"\";\n  data: any;\n  loading = true;\n  swiper: any;\n  @ViewChild(Slides) slides: Slides;\n  //config: Config;\n\n  slidesOptions = {initialSlide: 0}\n\n  constructor(public alertCtrl: AlertController,\n              public http: Http,\n              public modalCtrl: ModalController,\n              public params: NavParams,\n              public navCtrl: NavController,\n              private linkManager: LinkManagerProvider,\n              private authManager: AuthManagerProvider,\n              // days: Days\n\n  ) {\n    this.locationOptions = {\n      title: 'Klinik wählen',\n      subTitle: 'Wählen Sie ihre Klinik aus',\n      okText: 'anzeigen',\n      cancelText: 'abbrechen',\n      placeholder: \"Klinik auswählen\",\n      color: \"#5b5b5b\"\n      // mode: 'md'\n    };\n    if (authManager.isLoggedIn) {\n      if (authManager.clinicName == \"waldsee\") {\n        this.foodNotes = \"Allergene und Zusatzstoffe können bei der Küchenleitung eingesehen werden. Änderungen vorbehalten.\";\n      }\n      this.loadData(this.linkManager.getMenu(this.authManager.clinicName), function () {\n\n      });\n    }\n    else {\n      this.loaded = true;\n    }\n  }\n\n  /**\n   * Returns if toolbar to select clinic is needed\n   */\n  get selectionToolbarNeeded() {\n    return !this.authManager.isLoggedIn;\n  }\n\n  /**\n   * Changes the selected clinic and loads the menu on the UI.\n   * @param selectedClinic\n   */\n  changeClinic(selectedClinic) {\n    const me = this;\n    me.loaded = false;\n    this.loadData(this.linkManager.getMenu(selectedClinic.developername), function () {\n      me.loaded = true;\n    });\n  }\n\n  /**\n   * Transitions view and opens the home page\n   */\n  openHomePage() {\n    this.navCtrl.setRoot(HomePage);\n  }\n\n  // console.log(this.data);\n\n\n  //  console.log(JSON.stringify(this.day));\n\n  // var dayToArray = this.day;\n  // this.days = Object.keys(dayToArray).map(key => dayToArray[key]);\n  // console.log(dayToArray);\n  //  console.log(this.day);\n\n\n  /**\n   * Does refresh the data of the view.\n   * @param refresher\n   */\n  doRefresh(refresher) {\n    this.loadData(this.linkManager.getMenu(this.authManager.clinicName), function () {\n\n      refresher.complete();\n\n    });\n\n  }\n\n  /**\n   * Fetches and loads the data from the backend\n   * @param url\n   * @param callback\n   */\n  loadData(url, callback) {\n    const me = this;\n\n    this.http.get(url).map(res => res.json()).subscribe(response => {\n\n      this.data = response;\n      console.log(\"Menu data are: \", this.data);\n      this.day = [];\n\n\n      function getDayOfWeek(date) {\n        const dayOfWeek = new Date(date).getDay();\n        return isNaN(dayOfWeek) ? null : ['Sonntag', 'Montag', 'Dienstag', 'Mittwoch', 'Donnerstag', 'Freitag', 'Samstag'][dayOfWeek];\n      }\n\n      function compare(a, b) {\n        if (a.day < b.day)\n          return -1;\n        if (a.day > b.day)\n          return 1;\n        return 0;\n      }\n      const keys = [];\n      const fields = [];\n\n      // This is only to needed to properly show the title from each food on each menu card\n      let subFoodsIds = new Set();\n\n      for (let i = 0; i != this.data.length; i++) {\n\n        const menuCardData = this.data[i];\n        if (menuCardData == null || menuCardData === 'undefined') continue;\n        let dates = menuCardData.date.split(\"          \");\n        let food = menuCardData.title.split(\", \");\n        menuCardData.food = food;\n        menuCardData.time = dates[0].substr(11, 5) + ' - ' + dates[0].substr(-13, 5);\n        for (let oneSubFoodId of menuCardData.food_ids) {\n          subFoodsIds.add(oneSubFoodId)\n        }\n        for (let j = 0; j != dates.length; j++) {\n          const DyKey = new Date(dates[j].substr(0, 19));\n          const date = (\"0\" + DyKey.getDate()).slice(-2) + \".\" + (\"0\" + (DyKey.getMonth() + 1)).slice(-2) + \".\" + DyKey.getFullYear();\n          const dateKey = \"\" + DyKey.getFullYear() + (\"0\" + (DyKey.getMonth() + 1)).slice(-2) + (\"0\" + DyKey.getDate()).slice(-2);\n          if (keys.indexOf(dateKey) == -1) {\n\n            keys.push(dateKey);\n            const toPush = {day: dateKey, date: date, dow: getDayOfWeek(DyKey), data: [],};\n            toPush.data.push(menuCardData);\n            fields.push(toPush)\n\n          } else {\n            for (let curr of fields) {\n              if (curr.day == dateKey) {\n                let found = false;\n                for (let m of curr.data) {\n                  if (m.nid == menuCardData.nid) {\n                    found = true;\n                    break;\n                  }\n                }\n                if (!found) curr.data.push(menuCardData);\n                if (found) {\n                }\n                break;\n              }\n            }\n          }\n        }\n      }\n      // only 2 Weeks\n      this.day = fields.sort(compare).slice(0, 14);\n\n      for (let field of fields) {\n        const data = field.data;\n\n        data.sort(function (a, b) {\n          return parseInt(a.time.substr(0, 2)) - parseInt(b.time.substr(0, 2));\n\n        })\n      }\n\n      console.log(\"14 days: \", this.day);\n\n      // The below block is in order to fix the food array which should contain the titles of the foods for each card\n      let arraySubFoodIds = Array.from(subFoodsIds);\n      this.http.get(this.linkManager.getMenuFoodAdditionals(arraySubFoodIds.join('+'))).map(res => res.json()).subscribe(subFoods => {\n        let titlesOfSubFoodObject = Object(); // This will be a mapping (key, value) => (nid, {title: \"actual title\"})\n        for(let subFood of subFoods) {\n          titlesOfSubFoodObject[\"\"+subFood.nid] = {title: subFood.title}\n        }\n        for(let oneDay of this.day) {\n          for(let oneMenu of oneDay[\"data\"]) {\n            let newFoodArray = [];\n            for(let foodNid of oneMenu.food_ids) {\n              if (titlesOfSubFoodObject[foodNid] != undefined) {\n                newFoodArray.push(titlesOfSubFoodObject[foodNid].title)\n              }\n              else {\n                console.log(\"Nid doesn't exist: \" + foodNid)\n              }\n            }\n            oneMenu.food = newFoodArray\n          }\n        }\n        callback();\n        me.loaded = true;\n      })\n\n      //  refresher.complete();\n      /*  for (let menuCardData of this.data) {\n       if (menuCardData == null || menuCardData === 'undefined') continue;\n       //var day = {};\n       var date = new Date(menuCardData.date.trim());\n       // var monthDayKey =\"\" + date.getFullYear() +  date.getMonth() + date.getDate();\n       var monthDayKey = date.getDate();\n\n       var data = [];\n       data.push(menuCardData);\n       this.day.push({data: data, day: menuCardData.date.trim()});\n       //this.day = day;\n       }\n\n       for (let menuCardData of this.data) {\n       //console.log(menuCardData);\n       //  var day = {};\n       var date = new Date(menuCardData.date.trim());\n       //  console.log(date.parse(menuCardData.date));\n       //        var monthDayKey = \"\" + date.getFullYear() + date.getMonth() + date.getDate();\n       var monthDayKey = \"\" + date.getDate();\n\n       this.day[monthDayKey].day = ;\n       this.day[monthDayKey].data.push(menuCardData);\n       //this.day = day;\n       } */\n\n\n      //\n      //  console.log(this.day);\n      //}\n      //console.log(\"Menu data are: \", this.data);\n      //console.log(\"Menu this.day: \", this.day);\n\n    });\n\n\n  }\n\n  get dataR() {\n    return this.day;\n  }\n\n  onIonDrag(event) {\n    this.swiper = event;\n    this.swiper.lockSwipes();\n  }\n\n  /**\n   * Returns if the slide is the last one\n   */\n  isEnd() {\n    return this.slides.isEnd();\n  }\n\n  /**\n   * Returns if the slide is the first one\n   */\n  isBeginning() {\n    return this.slides.isBeginning();\n  }\n\n  /**\n   * Changes the UI and goes to the next slide (day)\n   */\n  slideNext() {\n    if (this.swiper) {\n      this.swiper.unlockSwipes();\n    }\n    this.slides.slideNext();\n  }\n\n  /**\n   * Changes the UI and goes to the previous slide (day)\n   */\n  slidePrev() {\n    if (this.swiper) {\n      this.swiper.unlockSwipes();\n    }\n    this.slides.slidePrev();\n  }\n\n  /**\n   * Prompts user to order the food.\n   * NOT IMPLEMENTED FULLY?!\n   * @param menu\n   */\n  doOrder(menu) {\n    let radioAlert = this.alertCtrl.create();\n    radioAlert.setTitle('Möchten Sie dieses Essen vorbestellen?');\n\n\n    for (let i = 0; i != menu.food.length; i++) {\n      radioAlert.addInput({\n        type: 'checkbox',\n        label: menu.food[i],\n        value: menu.food_ids[i],\n        checked: true\n      });\n\n    }\n\n\n    radioAlert.addButton('Abbrechen');\n    radioAlert.addButton({\n      text: \"Vorbestellen\",\n      handler: data => {\n        console.log('Radio data:', data);\n        this.testRadioOpen = false;\n        this.testRadioResult = data;\n      }\n    });\n\n    radioAlert.present().then(() => {\n      this.testRadioOpen = true;\n    });\n  }\n\n  /**\n   * Prompts user for rating the food\n   */\n  doRadioAlert() {\n    let radioAlert = this.alertCtrl.create();\n    radioAlert.setTitle('Wie hat Ihnen das Menü geschmeckt?');\n\n    radioAlert.addInput({\n      type: 'radio',\n      label: 'Hervorragend',\n      value: 'Hervorragend',\n      checked: true\n    });\n\n    radioAlert.addInput({\n      type: 'radio',\n      label: 'Gut',\n      value: 'Gut'\n    });\n\n    radioAlert.addInput({\n      type: 'radio',\n      label: 'Ausreichend',\n      value: 'Ausreichend'\n    });\n\n    radioAlert.addInput({\n      type: 'radio',\n      label: 'Nicht gut',\n      value: 'not-good'\n    });\n\n    // radioAlert.addInput({\n    //   type: 'text',\n    //   label: 'Kommentar',\n    //   value: 'comment'\n    // });\n    radioAlert.addButton('Abbrechen');\n    radioAlert.addButton({\n      text: 'Speichern',\n      handler: data => {\n        console.log('Radio data:', data);\n        this.testRadioOpen = false;\n        this.testRadioResult = data;\n      }\n    });\n\n    radioAlert.present().then(() => {\n      this.testRadioOpen = true;\n    });\n  }\n\n\n  /**\n   * Opens modal with the food details.\n   * @param food\n   */\n  presentModal(food) {\n    let modal = this.modalCtrl.create(ModalContentPage, food);\n    modal.present();\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/food-card/food-card.ts"],"sourceRoot":""}